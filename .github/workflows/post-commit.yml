# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: build-branch
on:
  - push
jobs:
  build:
    name: compile
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - uses: ./.github/buildenv
        with:
          args: ./hadoop-ozone/dev-support/checks/build.sh
  rat:
    name: rat
    runs-on: ubuntu-18.04
    steps:
        - uses: actions/checkout@master
        - uses: ./.github/buildenv
          with:
             args: ./hadoop-ozone/dev-support/checks/rat.sh
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: rat
            path: target/rat
  author:
    name: author
    runs-on: ubuntu-18.04
    steps:
        - uses: actions/checkout@master
        - uses: ./.github/buildenv
          with:
             args: ./hadoop-ozone/dev-support/checks/author.sh
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: author
            path: target/author
  unit:
    name: unit
    runs-on: ubuntu-18.04
    steps:
        - uses: actions/checkout@master
        - uses: ./.github/buildenv
          with:
             args: ./hadoop-ozone/dev-support/checks/unit.sh
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: unit
            path: target/unit
  checkstyle:
    name: checkstyle
    runs-on: ubuntu-18.04
    steps:
        - uses: actions/checkout@master
        - uses: ./.github/buildenv
          with:
             args: ./hadoop-ozone/dev-support/checks/checkstyle.sh
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: checkstyle
            path: target/checkstyle
  findbugs:
    name: findbugs
    runs-on: ubuntu-18.04
    steps:
        - uses: actions/checkout@master
        - uses: ./.github/buildenv
          with:
             args: ./hadoop-ozone/dev-support/checks/findbugs.sh
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: findbugs
            path: target/findbugs
  acceptance:
    name: acceptance
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-repo-${{ hashFiles('**/pom.xml') }}
      - name: checkout to /mnt/ozone
        run: |
          sudo chmod 777 /mnt
          git clone https://github.com/${GITHUB_REPOSITORY}.git /mnt/ozone
          cd /mnt/ozone
          git checkout ${GITHUB_SHA}
          git reset --hard
      - name: run a full build
        run: |
          cd /mnt/ozone
          hadoop-ozone/dev-support/checks/build.sh -Pcoverage
      - run: sudo pip install robotframework
      - run: |
          cd /mnt/ozone/hadoop-ozone/dist/target/ozone-* && sudo mkdir .aws && sudo chmod 777 .aws && sudo chown 1000 .aws
          cd /mnt/ozone && hadoop-ozone/dev-support/checks/acceptance.sh
        env:
          KEEP_IMAGE: false
          OZONE_WITH_COVERAGE: true
      - uses: actions/upload-artifact@master
        if: always()
        with:
          name: acceptance
          path: /mnt/ozone/target/acceptance
      - run: |
          #Never cache local artifacts
          rm -rf ~/.m2/repository/org/apache/hadoop/hdds
          rm -rf ~/.m2/repository/org/apache/hadoop/ozone
        if: always()
  it-freon:
    name: it-freon
    runs-on: ubuntu-18.04
    needs:
        - build
    steps:
        - run: sudo mkdir mnt && sudo mount --bind /mnt `pwd`/mnt && sudo chmod 777 mnt
        - uses: actions/checkout@master
          with:
            path: mnt/ozone
        - uses: ./mnt/ozone/.github/buildenv
          with:
             args: ./mnt/ozone/hadoop-ozone/dev-support/checks/integration.sh -Pfreon
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: it-freon
            path: mnt/ozone/target/integration
  it-filesystem:
    name: it-filesystem
    runs-on: ubuntu-18.04
    needs:
        - build
    steps:
        - run: sudo mkdir mnt && sudo mount --bind /mnt `pwd`/mnt && sudo chmod 777 mnt
        - uses: actions/checkout@master
          with:
            path: mnt/ozone
        - uses: ./mnt/ozone/.github/buildenv
          with:
             args: ./mnt/ozone/hadoop-ozone/dev-support/checks/integration.sh -Pfilesystem
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: it-filesystem
            path: mnt/ozone/target/integration
  it-filesystem-contract:
    name: it-filesystem-contract
    runs-on: ubuntu-18.04
    needs:
        - build
    steps:
        - run: sudo mkdir mnt && sudo mount --bind /mnt `pwd`/mnt && sudo chmod 777 mnt
        - uses: actions/checkout@master
          with:
            path: mnt/ozone
        - uses: ./mnt/ozone/.github/buildenv
          with:
             args: ./mnt/ozone/hadoop-ozone/dev-support/checks/integration.sh -Pfilesystem-contract
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: it-filesystem-contract
            path: mnt/ozone/target/integration
  it-client:
    name: it-client
    runs-on: ubuntu-18.04
    needs:
        - build
    steps:
        - run: sudo mkdir mnt && sudo mount --bind /mnt `pwd`/mnt && sudo chmod 777 mnt
        - uses: actions/checkout@master
          with:
            path: mnt/ozone
        - uses: ./mnt/ozone/.github/buildenv
          with:
             args: ./mnt/ozone/hadoop-ozone/dev-support/checks/integration.sh -Pclient
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: it-client
            path: mnt/ozone/target/integration
  it-hdds-om:
    name: it-hdds-om
    runs-on: ubuntu-18.04
    needs:
        - build
    steps:
        - run: sudo mkdir mnt && sudo mount --bind /mnt `pwd`/mnt && sudo chmod 777 mnt
        - uses: actions/checkout@master
          with:
            path: mnt/ozone
        - uses: ./mnt/ozone/.github/buildenv
          with:
             args: ./mnt/ozone/hadoop-ozone/dev-support/checks/integration.sh -Phdds-om
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: it-hdds-om
            path: mnt/ozone/target/integration
  it-ozone:
    name: it-ozone
    runs-on: ubuntu-18.04
    needs:
        - build
    steps:
        - run: sudo mkdir mnt && sudo mount --bind /mnt `pwd`/mnt && sudo chmod 777 mnt
        - uses: actions/checkout@master
          with:
            path: mnt/ozone
        - uses: ./mnt/ozone/.github/buildenv
          with:
             args: ./mnt/ozone/hadoop-ozone/dev-support/checks/integration.sh -Pozone
        - uses: actions/upload-artifact@master
          if: always()
          with:
            name: it-ozone
            path: mnt/ozone/target/integration
  coverage:
    name: coverage
    runs-on: ubuntu-18.04
    needs:
       - it-ozone
       - it-hdds-om
       - it-client
       - it-filesystem-contract
       - it-filesystem
       - it-freon
       - acceptance
       - unit
    steps:
       - uses: actions/checkout@v2
       - uses: ./.github/buildenv
         with:
            args: ./hadoop-ozone/dev-support/checks/build.sh
       - uses: actions/download-artifact@v2
         with:
            path: target/artifacts
       - run: ./.github/coverage-report.sh
       - uses: ./.github/buildenv
         if: github.repository == 'apache/hadoop-ozone'
         with:
           args: ./hadoop-ozone/dev-support/checks/sonar.sh
         env:
           SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       - uses: actions/upload-artifact@master
         with:
           name: coverage
           path: target/coverage
